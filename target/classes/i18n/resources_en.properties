index.jsp.welcome.to.app = Welcome to Cargo application!
index.jsp.login = Login
index.jsp.password = Password
index.jsp.log.in = Log in
index.jsp.sign.up = Sign up
index.jsp.get.delivery.cost.without.registration = Get delivery cost without registration
index.jsp.get.cost = Get cost!
index.jsp.title.login = Three or more characters required
index.jsp.title.password = Must contain at least one  number and one uppercase and lowercase letter, and at least 8 or more characters

header.jsp.cargo.application = Cargo Application
header.jsp.home = Home
header.jsp.get.all.orders = Get all orders
header.jsp.get.not.confirmed.orders = Get not confirmed orders
header.jsp.place.an.order.for.delivery = Place an order for delivery
header.jsp.my.wallet = My Wallet
header.jsp.my.orders = My orders
header.jsp.logout = Logout

managerHome.jsp.this.is.manager.home.page = This is manager home page! Hello,
managerHome.jsp.enter.arrivalDate = Enter arrival date:
managerHome.jsp.departure.city = Departure City:
managerHome.jsp.recipient.city = Recipient City:
managerHome.jsp.get.report = Get report
managerHome.jsp.report = Report
managerHome.jsp.order = Order 
managerHome.jsp.number = number
managerHome.jsp.client = Client
managerHome.jsp.cargo.type = Cargo type
managerHome.jsp.cargo.weight = Cargo weight (kg)
managerHome.jsp.cargo.volume = Cargo volume (m³)
managerHome.jsp.delivery.from = Delivery from
managerHome.jsp.delivery.to = Delivery to
managerHome.jsp.distance = Distance (km)
managerHome.jsp.price = Price
managerHome.jsp.not.confirmed = Not confirmed
managerHome.jsp.confirmed = Confirmed

manageOrders.jsp.all.orders.confirmed =  All orders confirmed :)
manageOrders.jsp.manage.orders = Manage Orders
manageOrders.jsp.confirm.order.and = Confirm order and
manageOrders.jsp.send.invoice = send invoice
manageOrders.jsp.confirm = Confirm

internalError.jsp.back = Back
internalError.jsp.something.went.wrong = Something went wrong :(
forbidden.jsp.forbidden = Forbidden!
error.jsp.error = error:
successRegistration.jsp.registration.successful.please.enter = Registration successful! Please enter.

getOrder.jsp.get.cost = Get cost!
getOrder.jsp.get.delivery.order = Get delivery order

clientWallet.jsp.wallet.balance = Wallet balance:
clientWallet.jsp.top.up.your.wallet = Top up your wallet
clientWallet.jsp.choose.delivery = Choose delivery
clientWallet.jsp.top.up = Top up!
clientWallet.jsp.order.delivery = Order delivery!
clientWallet.jsp.here.you.may.replenish.balance.on.your.wallet = Here you may replenish balance on your wallet!

clientOrders.jsp.sorry.you.have.not.orders.yet = Sorry, you have not orders yet :(
clientOrders.jsp.orders = Orders
clientOrders.jsp.pay = Pay
clientOrders.jsp.get.invoice = Get invoice

clientInvoice.jsp.invoice = Invoice
clientInvoice.jsp.choose.arrival.date = Choose arrival date
clientInvoice.jsp.pay.invoice = Pay invoice

clientHome.jsp.hello = Hello,
clientHome.jsp.about.cargo.application = About Cargo Application
clientHome.jsp.this.is.your.home.page = This is your home page.
clientHome.jsp.at.the.top.of.the.page = At the top of the page, you can find the sections:
clientHome.jsp.place.an.order.for.delivery = place an order for delivery
clientHome.jsp.about.button.place.an.order.for.delivery = here you can specify the necessary data to calculate the delivery cost, build a route, and leave a delivery request. After that, our managers will process the order and become available for payment.The shipping cost depends on the cargo's distance, weight, and volume.
clientHome.jsp.my.orders = my orders
clientHome.jsp.clientHome.jsp.about.button.my.orders = here are all your orders. With the help of filters, you can find any order. A confirmed order is available for payment, and by clicking the "get invoice" button, you can pay for it by selecting the desired delivery date (delivery time takes two days from the date of order).
clientHome.jsp.my.wallet = my wallet
clientHome.jsp.about.button.my.wallet = here you can see the balance on your account and replenish it.

getCost.jsp.back.to.registration = Back to registration
getCost.jsp.calculate.the.delivery.cost = Calculate the delivery cost!
getCost.jsp.get.cost = Get cost!

getCost.jsp.welcome.text = Welcome, you are logged in as an unregistered user.
getCost.jsp.welcome.text2 = Here you can calculate the delivery cost by entering
getCost.jsp.welcome.text3 = the relevant data above. The cost of delivery
getCost.jsp.welcome.text4 = depends on the weight, the volume of the cargo,
getCost.jsp.welcome.text5 = as well as delivery distance.
getCost.jsp.welcome.text6 = It is also possible to build and view the route on the map.

common.message.table.order = Order
common.message.table.number = number
common.message.table.client = Client
common.message.table.cargo.type = Cargo type:
common.message.table.cargo.weight = Cargo weight
common.message.table.cargo.volume = Cargo volume
common.message.table.delivery.from = Delivery from:
common.message.table.delivery.to = Delivery to:
common.message.table.distance = Distance
common.message.(uah) = (UAH)
common.message.table.(km) = (km)
common.message.table.(kg) = (kg)
common.message.table.(m³) = (m³)
common.message.table.departure.date = Departure date
common.message.table.arrival.date = Arrival date
common.message.table.price = Price
common.message.table.confirmation = Confirmation
common.message.table.payment = Payment
common.message.table.not.confirmed = Not confirmed
common.message.table.confirmed = Confirmed
common.message.table.not.paid = Not paid
common.message.table.paid = Paid
common.message.table.status = Status
common.message.button.find.order = Find Order
common.message.choose.departure.city = Choose departure city
common.message.choose = Choose...
common.message.choose.arrival.city = Choose arrival city
common.message.choose.cargo.type = Choose cargo type
common.message.metalwork = metalwork
common.message.woodwork = woodwork
common.message.furniture = furniture
common.message.spare.parts.for.cars = spare parts for cars
common.message.goods.in.boxes = goods in boxes
common.message.fragile.cargo = fragile cargo
common.message.other = other
common.message.results = Results:
common.message.sender.city = Sender city:
common.message.arrival.city = Arrival city:
common.message.delivery.cost = Delivery cost:
common.message.build.a.route = Build a route
common.message.update = Update
common.message.title.must.contain.only.latin.letters = Must contain only latin letters
common.message.title.format.expected.yyyy.mm.dd = Format expected YYYY-MM-DD